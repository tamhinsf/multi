{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "dt",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Admin password on all VMs."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "multi-vnet",
            "metadata": {
                "description": "VNET Name"
            }
        },
        "vnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "CIDR block for the vNet"
            }
        },
        "appGwSubnetName": {
            "type": "string",
            "defaultValue": "appgw-subnet",
            "metadata": {
                "description": "Name of the public subnet"
            }
        },
        "appGwSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "CIDR block for the appgw subnet"
            }
        }, 
        "publicSubnetName": {
            "type": "string",
            "defaultValue": "public-subnet",
            "metadata": {
                "description": "Name of the public subnet"
            }
        },
        "publicSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "CIDR block for the public subnet"
            }
        },
        "privateSubnetName": {
            "type": "string",
            "defaultValue": "private-subnet",
            "metadata": {
                "description": "Name of the private subnet"
            }
        },
        "privateSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.3.0/24",
            "metadata": {
                "description": "CIDR block for the private subnet"
            }
        },       
        "adminSubnetName": {
            "type": "string",
            "defaultValue": "admin-subnet",
            "metadata": {
                "description": "Name of the admin subnet"
            }
        },
        "adminSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.4.0/24",
            "metadata": {
                "description": "CIDR block for the admin subnet"
            }
        }, 
        "agVmName": {
            "type": "string",
            "defaultValue": "ag-vm",
            "maxLength": 61
        },
        "agVmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of VMs."
            }
        },
        "agVmInstanceCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of VM instances."
            },
            "maxValue": 12
        },
        "agVmEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "serverVmName": {
            "type": "string",
            "defaultValue": "server-vm",
            "maxLength": 61
        },
        "serverVmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of VMs."
            }
        },
        "serverVmInstanceCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of VM instances."
            },
            "maxValue": 6
        },
        "serverVmEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "cassandraVmName": {
            "type": "string",
            "defaultValue": "cassandra-vm",
            "maxLength": 61
        },
        "cassandraVmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of VMs."
            }
        },
        "cassandraVmInstanceCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of VM instances."
            },
            "maxValue": 12
        },
        "cassandraVmEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "elasticVmName": {
            "type": "string",
            "defaultValue": "elastic-vm",
            "maxLength": 61
        },
        "elasticVmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of VMs."
            }
        },
        "elasticVmInstanceCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of VM instances."
            },
            "maxValue": 6
        },
        "elasticVmEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "jumpBoxName": {
            "type": "string",
            "defaultValue": "jumpBox",
            "metadata": {
                "description": "Name of Jumpbox VM"
            }
        },
        "jumpBoxSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of Jumpbox VM"
            }
        },
        "jumpBoxEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": ""
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {
        "uniqueString": "[uniqueString(resourceGroup().id)]",
        "location": "[parameters('location')]",
        "vnetName": "[parameters('vnetName')]",
        "appGwSubnetName": "[parameters('appGwSubnetName')]",
        "publicSubnetName": "[parameters('publicSubnetName')]",
        "publicSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('publicSubnetName'))]",
        "publicSubnetNsg": "[concat(variables('vnetName'),'-',variables('publicSubnetName'),variables('suffixForNsg'))]",
        "privateSubnetName": "[parameters('privateSubnetName')]",
        "privateSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('privateSubnetName'))]",
        "privateSubnetNsg" : "[concat(variables('vnetName'),'-',variables('privateSubnetName'), variables('suffixForNsg'))]", 
        "adminSubnetName": "[parameters('adminSubnetName')]",
        "adminSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('adminSubnetName'))]",
        "adminSubnetNsg" : "[concat(variables('vnetName'),'-',variables('adminSubnetName'), variables('suffixForNsg'))]", 
        "appGwName": "[concat('appgw-',variables('uniqueString'))]",
        "appGwPublicIPAddressName": "[concat(variables('appGwName'),variables('suffixForIpConfig'))]",
        "appGwPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('appGwPublicIPAddressName'))]",
        "appGwID": "[resourceId('Microsoft.Network/applicationGateways',variables('appGwName'))]",
        "appGwSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('appGwSubnetName'))]",
        "appGwBePoolName": "[concat(variables('agNamingInfix'), variables('suffixForAgPool'))]",
        "appGwFrontendPortForHttp": 80,
        "appGwBackendPortForHttp": 80,
        "appGwBePoolNameOutboundInternet" : "appGwOutboundInternet",
        "storageAccountName": "[concat(toLower(substring(concat('storage', variables('uniqueString')), 0, 16)))]",
        "storageAccountRef" : "[resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName'))]",
        "privateEndpointName" : "[concat(variables('storageAccountName'),'-','privateEndpoint')]",
        "privateEndpointConnectionName" : "[concat(variables('privateEndpointName'),'-','connectionName')]",
        "jumpBoxName": "[concat(toLower(substring(concat(parameters('jumpBoxName'), '-', variables('uniqueString')), 0, 16)),'-vm')]",
        "jumpBoxIpConfigName": "[concat(variables('jumpBoxName'), variables('suffixForIpConfig'))]",
        "jumpBoxPublicIPName": "[concat(variables('jumpBoxName'), variables('suffixForPublicIp'))]",
        "jumpBoxNicName": "[concat(variables('jumpBoxName'), variables('suffixForNic'))]",
        "jumpBoxNsgName": "[concat(variables('jumpBoxName'), variables('suffixForNsg'))]",
        "jumpBoxRoleGuid": "[guid(variables('jumpBoxName'))]",
        "agNamingInfix": "[toLower(parameters('agVmName'))]",
        "agPublicIpName": "[concat(variables('agNamingInfix'), variables('suffixForPublicIp'))]",
        "agNicName": "[concat(variables('agNamingInfix'), variables('suffixForNic'))]",
        "serverNamingInfix": "[toLower(parameters('serverVmName'))]",
        "serverNicName": "[concat(variables('serverNamingInfix'), variables('suffixForNic'))]",
        "cassandraNamingInfix": "[toLower(parameters('cassandraVmName'))]",
        "cassandraNicName": "[concat(variables('cassandraNamingInfix'), variables('suffixForNic'))]",
        "elasticNamingInfix": "[toLower(parameters('elasticVmName'))]",
        "elasticNicName": "[concat(variables('elasticNamingInfix'), variables('suffixForNic'))]",
        "imageReference": "[variables('osType')]",
        "osType": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.7",
            "version": "latest"
        },
        "suffixForAgPool" : "-appGwPool",
        "suffixForIpConfig": "-ipconfig",
        "suffixForNic": "-nic",
        "suffixForPublicIp": "-pip",
        "suffixForNsg": "-nsg",
        "roleGuidForContributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
        "roleGuidForReader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
        "roleGuidForStorageAccountContributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
        "scriptBasePath": "https://tamhinsfpublic.blob.core.windows.net/dtrace/",
        "scriptInstallAzureCli": "installAzureCli.sh",
        "scriptMountDataDisks": "mountDataDisks.sh",
        "scriptMountAzureFiles": "mountAzureFiles.sh",
        "scriptInstallSoftware": "installSoftware.sh"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[variables('location')]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[variables('privateSubnetNsg')]",
                "[variables('publicSubnetNsg')]",
                "[variables('jumpBoxNsgName')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('appGwSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('appGwSubnetPrefix')]"
                        }
                    },                
                    {
                        "name": "[variables('publicSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('publicSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id" : "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('publicSubnetNsg'))]"
                            }              
                        }     
                    },
                    {
                        "name": "[variables('privateSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('privateSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id" : "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('privateSubnetNsg'))]"
                            },
                            "privateEndpointNetworkPolicies" : "Disabled"
                        }
                    },
                    {
                        "name": "[variables('adminSubnetName')]",
                        "properties" : {
                            "addressPrefix": "[parameters('adminSubnetPrefix')]",
                            "networkSecurityGroup": {
                                 "id" : "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('jumpBoxNsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('jumpboxNsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowSsh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },        
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('publicSubnetNsg')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowHttp",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowSshFromAdminSubnet",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('adminSubnetPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('privateSubnetNsg')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowHttpFromPublicSubnet",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "[parameters('publicSubnetPrefix')]",
                            "destinationAddressPrefix": "[parameters('privateSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowSshFromAdminSubnet",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('adminSubnetPrefix')]",
                            "destinationAddressPrefix": "[parameters('privateSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "denyAll",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('privateSubnetPrefix')]",
                            "access": "Deny",
                            "priority": 102,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('jumpBoxPublicIpName')]",
            "location": "[variables('location')]",
            "apiVersion": "2017-08-01",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('jumpBoxName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('jumpBoxNicName')]",
            "location": "[variables('location')]",
            "apiVersion": "2017-06-01",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpBoxPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('jumpBoxEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "[variables('jumpBoxIpConfigName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('jumpBoxPublicIpName'))]"
                            },
                            "subnet": {
                                "id": "[variables('adminSubnetRef')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup":{
                   "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumpBoxNsgName'))]"
                }

            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('jumpBoxName')]",
            "location": "[variables('location')]",
            "apiVersion": "2018-06-01",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('jumpBoxNicName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('jumpBoxSku')]"
                },
                "osProfile": {
                    "computerName": "[variables('jumpBoxName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpBoxNicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('jumpBoxName'),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[variables('jumpBoxName')]",
                        "[variables('jumpBoxRoleGuid')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptInstallAzureCli'))]"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptInstallAzureCli'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[variables('jumpBoxRoleGuid')]",
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[variables('jumpBoxName')]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('roleGuidForContributor'))]",
                "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('jumpBoxName')), '2018-06-01', 'Full').identity.principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[guid(concat(variables('serverNamingInfix'),copyIndex(),variables('uniqueString')))]",
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[concat(variables('serverNamingInfix'), copyindex())]"
            ],
            "copy": {
                "name": "[concat(variables('serverNamingInfix'), 'roleAssignmentLoop')]",
                "count": "[parameters('serverVmInstanceCount')]"
            },
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('roleGuidForReader'))]",
                "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', concat(variables('serverNamingInfix'), copyIndex())), '2018-06-01', 'Full').identity.principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[guid(concat(variables('serverNamingInfix'),copyIndex(),'storgeGuid',variables('uniqueString')))]",
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[concat(variables('serverNamingInfix'), copyindex())]"
            ],
            "copy": {
                "name": "[concat(variables('serverNamingInfix'), 'storageGuid','roleAssignmentLoop')]",
                "count": "[parameters('serverVmInstanceCount')]"
            },
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('roleGuidForStorageAccountContributor'))]",
                "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', concat(variables('serverNamingInfix'), copyIndex())), '2018-06-01', 'Full').identity.principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('appGwPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-04-01",
            "sku" : {
                "name" : "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/applicationGateways",
            "name": "[variables('appGwName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', variables('appGwPublicIPAddressName'))]"
            ],
            "zones" : [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "sku": {
                    "name": "Standard_v2",
                    "tier": "Standard_v2",
                    "capacity": 3
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGwIpConfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('appGwSubnetID')]"
                            }
                        }
                    }
                ],
                "frontendIPConfigurations": [
                    {
                        "name": "appGwFrontendIP",
                        "properties": {
                            "PublicIPAddress": {
                                "id": "[variables('appGwPublicIPAddressID')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "appGwFrontendPort",
                        "properties": {
                            "Port": "[variables('appGwFrontendPortForHttp')]"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('appGwBePoolName')]"
                    },
                    {
                        "name": "[variables('appGwBePoolNameOutboundInternet')]"
                    }                
                ],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGwBackendHttpSettings",
                        "properties": {
                            "Port": "[variables('appGwBackendPortForHttp')]",
                            "Protocol": "Http",
                            "CookieBasedAffinity": "Disabled"
                        }
                    }
                ],
                "httpListeners": [
                    {
                        "name": "appGwHttpListener",
                        "properties": {
                            "FrontendIPConfiguration": {
                                "Id": "[concat(variables('appGwID'), '/frontendIPConfigurations/appGwFrontendIP')]"
                            },
                            "FrontendPort": {
                                "Id": "[concat(variables('appGwID'), '/frontendPorts/appGwFrontendPort')]"
                            },
                            "Protocol": "Http",
                            "SslCertificate": null
                        }
                    }                  
                ],
                "requestRoutingRules": [
                    {
                        "Name": "rule1",
                        "properties": {
                            "RuleType": "Basic",
                            "httpListener": {
                                "id": "[concat(variables('appGwID'), '/httpListeners/appGwHttpListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('appGwID'), '/backendAddressPools/', variables('appGwBePoolName'))]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(variables('appGwID'), '/backendHttpSettingsCollection/appGwBackendHttpSettings')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "dependsOn" : [
                "[variables('vnetName')]"
            ],
            "tags": {
                "dt": "serverlogstorage"
            },
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_ZRS",
                "tier": "Standard"
            },
            "properties": {
                "accessTier": "Hot",
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default/', 'serverlogstorage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('agPublicIpName'),copyindex())]",
            "location": "[variables('location')]",
            "apiVersion": "2017-08-01",
            "sku" : {
                "name" : "Standard"
            },
            "copy": {
                "name": "[concat(variables('agPublicIpName'), 'pipLoop')]",
                "count": "[parameters('agVmInstanceCount')]"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('agPublicIpName'),copyindex(),variables('uniqueString'),'-pip')]"
                }
            }
        },
  {
            "apiVersion": "2019-04-01",
            "name": "[variables('privateEndpointName')]",
            "type": "Microsoft.Network/privateEndpoints",
            "location": "[parameters('location')]",
            "dependsOn" : [
                "[variables('vnetName')]",
                "[variables('storageAccountName')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointConnectionName')]",
                        "properties": {
                            "privateLinkServiceId": "[variables('storageAccountRef')]",
                            "groupIds": [
                                "file"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[variables('privateSubnetRef')]"
                }
            }
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('agNicName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat(variables('agNicName'), 'nicLoop')]",
                "count": "[parameters('agVmInstanceCount')]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('publicSubnetNsg')]",
                "[variables('appGwName')]",
                "[concat(variables('agPublicIpName'), 'pipLoop')]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('agVmEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('agPublicIpName'),copyindex()))]"
                            },
                            "subnet": {
                                "id": "[variables('publicSubnetRef')]"
                            },
                            "ApplicationGatewayBackendAddressPools": [
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/applicationGateways/', variables('appGwName'), '/backendAddressPools/', variables('appGwBePoolName'))]"
                                }   
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('publicSubnetNsg'))]"
                }
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('agNamingInfix'), copyindex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "[concat(variables('agNamingInfix'), 'vmLoop')]",
                "count": "[parameters('agVmInstanceCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('agNicName'), 'nicLoop')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('agVmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('agNamingInfix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 80,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ],
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agNicName'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('agNamingInfix'), copyindex(),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(variables('agNamingInfix'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptMountDataDisks'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptInstallSoftware'))]"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptMountDataDisks'),';','bash ', variables('scriptInstallSoftware'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('serverNicName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat(variables('serverNicName'), 'nicLoop')]",
                "count": "[parameters('serverVmInstanceCount')]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('appGwName')]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('serverVmEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('privateSubnetRef')]"
                            }                      
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('serverNamingInfix'), copyindex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "[concat(variables('serverNamingInfix'), 'vmLoop')]",
                "count": "[parameters('serverVmInstanceCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('serverNicName'), 'nicLoop')]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('serverVmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('serverNamingInfix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 2500,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        },
                        {
                            "diskSizeGB": 100,
                            "lun": 1,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ],
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('serverNicName'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('serverNamingInfix'), copyindex(),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(variables('serverNamingInfix'), copyindex())]",
                        "[variables('privateEndpointName')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptInstallAzureCli'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptMountDataDisks'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptMountAzureFiles'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptInstallSoftware'))]"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptInstallAzureCli'),';','bash ', variables('scriptMountDataDisks'),';','bash ', variables('scriptMountAzureFiles'),';','bash ', variables('scriptInstallSoftware'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('cassandraNicName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat(variables('cassandraNicName'), 'nicLoop')]",
                "count": "[parameters('cassandraVmInstanceCount')]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('appGwName')]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('cassandraVmEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('privateSubnetRef')]"
                            }                          
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('cassandraNamingInfix'), copyindex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "[concat(variables('cassandraNamingInfix'), 'vmLoop')]",
                "count": "[parameters('cassandraVmInstanceCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('cassandraNicName'), 'nicLoop')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('cassandraVmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('cassandraNamingInfix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 2500,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ],
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('cassandraNicName'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('cassandraNamingInfix'), copyindex(),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(variables('cassandraNamingInfix'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptMountDataDisks'))]"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptMountDataDisks'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('elasticNicName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat(variables('elasticNicName'), 'nicLoop')]",
                "count": "[parameters('elasticVmInstanceCount')]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('appGwName')]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('elasticVmEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('privateSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('elasticNamingInfix'), copyindex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "[concat(variables('elasticNamingInfix'), 'vmLoop')]",
                "count": "[parameters('elasticVmInstanceCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('elasticNicName'), 'nicLoop')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('elasticVmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('elasticNamingInfix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 700,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ],
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('elasticNicName'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('elasticNamingInfix'), copyindex(),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(variables('elasticNamingInfix'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptMountDataDisks'))]"]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptMountDataDisks'))]"
                        }
                    }
                }
            ]
        }
    ]
}