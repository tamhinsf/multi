{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "defaultValue": "multi",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Admin password on all VMs."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "multi-vnet",
            "metadata": {
                "description": "VNET Name"
            }
        },
        "vnetPrefix": {
            "type": "string",
            "defaultValue": "10.1.0.0/16",
            "metadata": {
                "description": "CIDR block for the vNet"
            }
        },
        "agSubnetName": {
            "type": "string",
            "defaultValue": "ag-subnet",
            "metadata": {
                "description": "Name of the ag subnet"
            }
        },
        "agSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.1.0.0/24",
            "metadata": {
                "description": "CIDR block for the ag subnet"
            }
        },
        "serverSubnetName": {
            "type": "string",
            "defaultValue": "server-subnet",
            "metadata": {
                "description": "Name of the server subnet"
            }
        },
        "serverSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.1.1.0/24",
            "metadata": {
                "description": "CIDR block for the server subnet"
            }
        },
        "cassandraSubnetName": {
            "type": "string",
            "defaultValue": "cassandra-subnet",
            "metadata": {
                "description": "Name of the cassandra subnet"
            }
        },
        "cassandraSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.1.2.0/24",
            "metadata": {
                "description": "CIDR block for the cassandra subnet"
            }
        },
        "elasticSubnetName": {
            "type": "string",
            "defaultValue": "elastic-subnet",
            "metadata": {
                "description": "Name of the elastic subnet"
            }
        },
        "elasticSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.1.3.0/24",
            "metadata": {
                "description": "CIDR block for the elastic subnet"
            }
        },
        "agVmName": {
            "type": "string",
            "defaultValue": "ag-vm",
            "maxLength": 61
        },
        "agVmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of VMs."
            }
        },
        "agVmInstanceCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of VM instances."
            },
            "maxValue": 12
        },
        "agVmEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "serverVmName": {
            "type": "string",
            "defaultValue": "server-vm",
            "maxLength": 61
        },
        "serverVmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of VMs."
            }
        },
        "serverVmInstanceCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of VM instances."
            },
            "maxValue": 6
        },
        "serverVmEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "cassandraVmName": {
            "type": "string",
            "defaultValue": "cassandra-vm",
            "maxLength": 61
        },
        "cassandraVmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of VMs."
            }
        },
        "cassandraVmInstanceCount": {
            "type": "int",
            "defaultValue": 6,
            "metadata": {
                "description": "Number of VM instances."
            },
            "maxValue": 12
        },
        "cassandraVmEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "elasticVmName": {
            "type": "string",
            "defaultValue": "elastic-vm",
            "maxLength": 61
        },
        "elasticVmSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of VMs."
            }
        },
        "elasticVmInstanceCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Number of VM instances."
            },
            "maxValue": 6
        },
        "elasticVmEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "jumpBoxName": {
            "type": "string",
            "defaultValue": "jumpBox",
            "metadata": {
                "description": "Name of Jumpbox VM"
            }
        },
        "jumpBoxSku": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of Jumpbox VM"
            }
        },
        "jumpBoxEnableAnet": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Enable accelerated networking."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": ""
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {
        "location": "[parameters('location')]",
        "vnetName": "[parameters('vnetName')]",
        "jumpBoxName": "[concat(toLower(substring(concat(parameters('jumpBoxName'), '-', variables('uniqueString')), 0, 16)),'-vm')]",
        "jumpBoxIpConfigName": "[concat(variables('jumpBoxName'), variables('suffixForIpConfig'))]",
        "jumpBoxPublicIPName": "[concat(variables('jumpBoxName'), variables('suffixForPublicIp'))]",
        "jumpBoxNicName": "[concat(variables('jumpBoxName'), variables('suffixForNic'))]",
        "jumpBoxRoleGuid": "[guid(variables('jumpBoxName'))]",
        "scriptBasePath": "https://tamhinsfpublic.blob.core.windows.net/dtrace/",
        "agNamingInfix": "[toLower(parameters('agVmName'))]",
        "agNicName": "[concat(variables('agNamingInfix'), variables('suffixForNic'))]",
        "serverNamingInfix": "[toLower(parameters('serverVmName'))]",
        "serverNicName": "[concat(variables('serverNamingInfix'), variables('suffixForNic'))]",
        "cassandraNamingInfix": "[toLower(parameters('cassandraVmName'))]",
        "cassandraNicName": "[concat(variables('cassandraNamingInfix'), variables('suffixForNic'))]",
        "elasticNamingInfix": "[toLower(parameters('elasticVmName'))]",
        "elasticNicName": "[concat(variables('elasticNamingInfix'), variables('suffixForNic'))]",
        "agSubnetName": "[parameters('agSubnetName')]",
        "agSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('agSubnetName'))]",
        "agLbName": "[concat(variables('agSubnetName'), variables('suffixForLoadBalancer'))]",
        "agLbPublicIpName": "[concat(variables('agLbName'), variables('uniqueString'), variables('suffixForPublicIp'))]",
        "agLbId": "[resourceId('Microsoft.Network/loadBalancers',variables('agLbName'))]",
        "agLbFrontEndIpConfigId": "[concat(variables('agLbId'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "agLbBePoolName": "[concat(variables('agNamingInfix'), variables('suffixForBePool'))]",
        "agNsgName": "[concat(variables('agSubnetName'), variables('suffixForNsg'))]",
        "serverSubnetName": "[parameters('serverSubnetName')]",
        "serverSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('serverSubnetName'))]",
        "serverLbName": "[concat(variables('serverSubnetName'), variables('suffixForLoadBalancer'))]",
        "serverLbId": "[resourceId('Microsoft.Network/loadBalancers',variables('serverLbName'))]",
        "serverLbFrontEndIpConfigId": "[concat(variables('serverLbId'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "serverLbBePoolName": "[concat(variables('serverNamingInfix'), variables('suffixForServerPool'))]",
        "serverNsgName": "[concat(variables('serverSubnetName'), variables('suffixForNsg'))]",
        "cassandraSubnetName": "[parameters('cassandraSubnetName')]",
        "cassandraSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('cassandraSubnetName'))]",
        "cassandraNsgName": "[concat(variables('cassandraSubnetName'), variables('suffixForNsg'))]",
        "elasticSubnetName": "[parameters('elasticSubnetName')]",
        "elasticSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('elasticSubnetName'))]",
        "elasticLbName": "[concat(variables('elasticSubnetName'), variables('suffixForLoadBalancer'))]",
        "elasticLbId": "[resourceId('Microsoft.Network/loadBalancers',variables('elasticLbName'))]",
        "elasticLbFrontEndIpConfigId": "[concat(variables('elasticLbId'),'/frontendIPConfigurations/loadBalancerFrontEnd')]",
        "elasticLbBePoolName": "[concat(variables('elasticNamingInfix'), variables('suffixForElasticPool'))]",
        "elasticNsgName": "[concat(variables('elasticSubnetName'), variables('suffixForNsg'))]",
        "osType": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.7",
            "version": "latest"
        },
        "imageReference": "[variables('osType')]",
        "suffixForIpConfig": "-ipconfig",
        "suffixForBePool": "-bePool",
        "suffixForServerPool": "-serverPool",
        "suffixForElasticPool": "-elasticPool",
        "suffixForNic": "-nic",
        "suffixForPublicIp": "-pip",
        "suffixForLoadBalancer": "-lb",
        "suffixForNsg": "-nsg",
        "storageAccountName": "[concat(toLower(substring(concat('storage', variables('uniqueString')), 0, 16)))]",
        "uniqueString": "[uniqueString(resourceGroup().id)]",
        "roleGuidForContributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
        "roleGuidForStorageAccountContributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
        "scriptInstallAzureCli": "installAzureCli.sh",
        "scriptMountDataDisks": "mountDataDisks.sh",
        "scriptMountAzureFiles": "mountAzureFiles.sh",
        "scriptInstallSoftware": "installSoftware.sh"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "location": "[variables('location')]",
            "apiVersion": "2017-06-01",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('agSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('agSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('serverSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('serverSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('cassandraSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('cassandraSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('elasticSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('elasticSubnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('agNsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowHttp",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('agSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowSsh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('agSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('serverNsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowHttp",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('serverSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowSsh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('serverSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('cassandraNsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowHttp",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('cassandraSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowSsh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('cassandraSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('elasticNsgName')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allowHttp",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('elasticSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allowSsh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "[parameters('elasticSubnetPrefix')]",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('jumpBoxPublicIpName')]",
            "location": "[variables('location')]",
            "apiVersion": "2017-08-01",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('jumpBoxName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('jumpBoxNicName')]",
            "location": "[variables('location')]",
            "apiVersion": "2017-06-01",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('jumpBoxPublicIpName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('jumpBoxEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "[variables('jumpBoxIpConfigName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('jumpBoxPublicIpName'))]"
                            },
                            "subnet": {
                                "id": "[variables('agSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('jumpBoxName')]",
            "location": "[variables('location')]",
            "apiVersion": "2018-06-01",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('jumpBoxNicName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('jumpBoxSku')]"
                },
                "osProfile": {
                    "computerName": "[variables('jumpBoxName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('jumpBoxNicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('jumpBoxName'),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[variables('jumpBoxName')]",
                        "[variables('jumpBoxRoleGuid')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptInstallAzureCli'))]"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptInstallAzureCli'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[variables('jumpBoxRoleGuid')]",
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[variables('jumpBoxName')]"
            ],
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('roleGuidForContributor'))]",
                "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', variables('jumpBoxName')), '2018-06-01', 'Full').identity.principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[guid(concat(variables('serverNamingInfix'),copyIndex(),variables('uniqueString')))]",
            "apiVersion": "2018-09-01-preview",
            "dependsOn": [
                "[concat(variables('serverNamingInfix'), copyindex())]"
            ],
            "copy": {
                "name": "[concat(variables('serverNamingInfix'), 'roleAssignmentLoop')]",
                "count": "[parameters('serverVmInstanceCount')]"
            },
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('roleGuidForStorageAccountContributor'))]",
                "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', concat(variables('serverNamingInfix'), copyIndex())), '2018-06-01', 'Full').identity.principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('agLbPublicIpName')]",
            "location": "[variables('location')]",
            "apiVersion": "2018-10-01",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('agLbPublicIpName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('agLbName')]",
            "location": "[variables('location')]",
            "apiVersion": "2018-08-01",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('agLbPublicIpName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('agLbBePoolName')]"
                    },
                    {
                        "name": "outboundPoolForInternet"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "adminUiLbRuleForAg",
                        "properties": {
                            "disableOutboundSnat" : true,
                            "frontendIPConfiguration": {
                                "id": "[variables('agLbFrontEndIpConfigId')]"
                            },
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agLbName'), '/backendAddressPools/', variables('agLbBePoolName'))]"
                            },
                            "probe": {
                                "id": "[concat(variables('agLbId'), '/probes/sshHealthCheck')]"
                            }
                        }
                    },
                    {                      
                        "name": "httpLbRuleForAg",
                        "properties": {
                            "disableOutboundSnat" : true,
                            "frontendIPConfiguration": {
                                "id": "[variables('agLbFrontEndIpConfigId')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agLbName'), '/backendAddressPools/', variables('agLbBePoolName'))]"
                            },
                            "probe": {
                                "id": "[concat(variables('agLbId'), '/probes/sshHealthCheck')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "sshHealthCheck",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 60,
                            "numberOfProbes": 1000
                        }
                    }
                ],
                "outboundRules": [
                    {
                        "name": "outboundRule", 
                        "properties": {
                            "backendAddressPool": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agLbName'), '/backendAddressPools/', 'outboundPoolForInternet')]"
                            },
                            "frontendIPConfigurations": [
                                {
                                    "id": "[variables('agLbFrontEndIpConfigId')]"
                                }
                            ],
                            "protocol": "All"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('serverLbName')]",
            "location": "[variables('location')]",
            "apiVersion": "2018-08-01",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "subnet": {
                                "id": "[variables('agSubnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('serverLbBePoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "adminUiLbRuleForServer",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('serverLbFrontEndIpConfigId')]"
                            },
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('serverLbName'), '/backendAddressPools/', variables('serverLbBePoolName'))]"
                            },
                            "probe": {
                                "id": "[concat(variables('serverLbId'), '/probes/sshHealthCheck')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "sshHealthCheck",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 60,
                            "numberOfProbes": 1000
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('elasticLbName')]",
            "location": "[variables('location')]",
            "apiVersion": "2018-08-01",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "subnet": {
                                "id": "[variables('serverSubnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('elasticLbBePoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "adminUiLbRuleForElastic",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('elasticLbFrontEndIpConfigId')]"
                            },
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('elasticLbName'), '/backendAddressPools/', variables('elasticLbBePoolName'))]"
                            },
                            "probe": {
                                "id": "[concat(variables('elasticLbId'), '/probes/sshHealthCheck')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "sshHealthCheck",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 60,
                            "numberOfProbes": 1000
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "tags": {
                "dt": "serverlogstorage"
            },
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_ZRS",
                "tier": "Standard"
            },
            "properties": {
                "accessTier": "Hot",
                "largeFileSharesState": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-04-01",
            "name": "[concat(variables('storageAccountName'), '/default/', 'serverlogstorage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('agNicName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat(variables('agNicName'), 'nicLoop')]",
                "count": "[parameters('agVmInstanceCount')]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('agNsgName')]",
                "[variables('agLbName')]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('agVmEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('agSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agLbName'), '/backendAddressPools/', variables('agLbBePoolName'))]"
                                },
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agLbName'), '/backendAddressPools/', 'outboundPoolForInternet')]"
                                }                                
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('agNsgName'))]"
                }
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('agNamingInfix'), copyindex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "[concat(variables('agNamingInfix'), 'vmLoop')]",
                "count": "[parameters('agVmInstanceCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('agNicName'), 'nicLoop')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('agVmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('agNamingInfix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 80,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ],
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('agNicName'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('agNamingInfix'), copyindex(),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(variables('agNamingInfix'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptMountDataDisks'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptInstallSoftware'))]"

                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptMountDataDisks'),';','bash ', variables('scriptInstallSoftware'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('serverNicName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat(variables('serverNicName'), 'nicLoop')]",
                "count": "[parameters('serverVmInstanceCount')]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('agLbName')]",
                "[variables('serverLbName')]",
                "[variables('serverNsgName')]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('serverVmEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('serverSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('serverLbName'), '/backendAddressPools/', variables('serverLbBePoolName'))]"
                                },
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agLbName'), '/backendAddressPools/', 'outboundPoolForInternet')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('serverNsgName'))]"
                }
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('serverNamingInfix'), copyindex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "[concat(variables('serverNamingInfix'), 'vmLoop')]",
                "count": "[parameters('serverVmInstanceCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('serverNicName'), 'nicLoop')]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('serverVmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('serverNamingInfix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 2500,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        },
                        {
                            "diskSizeGB": 100,
                            "lun": 1,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ],
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('serverNicName'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('serverNamingInfix'), copyindex(),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(variables('serverNamingInfix'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptInstallAzureCli'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptMountDataDisks'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptMountAzureFiles'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptInstallSoftware'))]"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptInstallAzureCli'),';','bash ', variables('scriptMountDataDisks'),';','bash ', variables('scriptMountAzureFiles'),';','bash ', variables('scriptInstallSoftware'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('cassandraNicName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat(variables('cassandraNicName'), 'nicLoop')]",
                "count": "[parameters('cassandraVmInstanceCount')]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('cassandraNsgName')]",
                "[variables('agLbName')]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('cassandraVmEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('cassandraSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agLbName'), '/backendAddressPools/', 'outboundPoolForInternet')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('cassandraNsgName'))]"
                }
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('cassandraNamingInfix'), copyindex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "[concat(variables('cassandraNamingInfix'), 'vmLoop')]",
                "count": "[parameters('cassandraVmInstanceCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('cassandraNicName'), 'nicLoop')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('cassandraVmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('cassandraNamingInfix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 2500,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ],
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('cassandraNicName'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('cassandraNamingInfix'), copyindex(),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(variables('cassandraNamingInfix'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptMountDataDisks'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptInstallSoftware'))]"

                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptMountDataDisks'),';','bash ', variables('scriptInstallSoftware'))]"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('elasticNicName'), copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "[concat(variables('elasticNicName'), 'nicLoop')]",
                "count": "[parameters('elasticVmInstanceCount')]"
            },
            "dependsOn": [
                "[variables('vnetName')]",
                "[variables('elasticLbName')]",
                "[variables('elasticNsgName')]",
                "[variables('agLbName')]"
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('elasticVmEnableAnet')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('elasticSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('elasticLbName'), '/backendAddressPools/', variables('elasticLbBePoolName'))]"
                                },
                                {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agLbName'), '/backendAddressPools/', 'outboundPoolForInternet')]"
                                }
                            ]
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('elasticNsgName'))]"
                }
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('elasticNamingInfix'), copyindex())]",
            "zones": "[split(string(add(mod(copyIndex(),3),1)), ',')]",
            "copy": {
                "name": "[concat(variables('elasticNamingInfix'), 'vmLoop')]",
                "count": "[parameters('elasticVmInstanceCount')]"
            },
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('elasticNicName'), 'nicLoop')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('elasticVmSku')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('elasticNamingInfix'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 700,
                            "lun": 0,
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "StandardSSD_LRS"
                            }
                        }
                    ],
                    "imageReference": "[variables('imageReference')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('elasticNicName'),copyindex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "[concat(variables('elasticNamingInfix'), copyindex(),'-script')]",
                    "type": "extensions",
                    "apiVersion": "2018-06-01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat(variables('elasticNamingInfix'), copyindex())]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(variables('scriptBasePath'),variables('scriptMountDataDisks'))]",
                                "[concat(variables('scriptBasePath'),variables('scriptInstallSoftware'))]"
                            ]
                        },
                        "protectedSettings": {
                            "commandToExecute": "[concat('bash ', variables('scriptMountDataDisks'),';','bash ', variables('scriptInstallSoftware'))]"
                        }
                    }
                }
            ]
        }
    ]
}